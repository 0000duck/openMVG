PROJECT(koral)
cmake_minimum_required (VERSION 3.1)

IF (${OpenMVG_USE_CUDA} AND ${OPENMVG_USE_SSE})
  FIND_PACKAGE(CUDA REQUIRED)
  FIND_PACKAGE(SSE REQUIRED)

  IF (SSE4_1_FOUND)
    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/config/)

    SET (HEADERS CLATCH.h CUDALERP.h FeatureAngle.h KFAST.h KORAL.h Keypoint.h)

    SET (SRC CLATCH.cu CUDALERP.cu)

    LIST(APPEND CUDA_NVCC_FLAGS "-D_MWAITXINTRIN_H_INCLUDED -lineinfo -Xptxas -v -Xcompiler -fopenmp -use_fast_math -O3 -gencode arch=compute_30,code=sm_30 -gencode arch=compute_60,code=sm_60 --default-stream per-thread")

    SET(CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -std=c++11")

    SET(CMAKE_CXX_STANDARD 11)

    IF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
      SET (CMAKE_CXX_FLAGS "--std=gnu++11 ${CMAKE_CXX_FLAGS}")
    ELSE()
      SET (CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
    ENDIF()

    SET(CUDA_PROPOGATE_HOST_FLAGS OFF)

    INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})

    CUDA_ADD_LIBRARY(koral STATIC ${SRC} ${HEADERS})
    SET_PROPERTY(TARGET koral PROPERTY FOLDER OpenMVG/3rdParty)

    TARGET_COMPILE_FEATURES(koral PRIVATE cxx_constexpr)

    if(KORAL_INCLUDE_INSTALL_DIR)
      set(INCLUDE_INSTALL_DIR ${KORAL_INCLUDE_INSTALL_DIR})
    else()
      set(INCLUDE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/include/koral")
    endif()

    install(FILES
      ${HEADERS}
      DESTINATION ${INCLUDE_INSTALL_DIR} COMPONENT Devel
    )
    INSTALL(TARGETS koral DESTINATION lib EXPORT openMVG-targets)
  ENDIF()
ENDIF()
